# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 14.0.2
      uses: actions/setup-java@v1
      with:
        java-version: 14.0.2
    # Make sure the latest GraalVM is installed.
    # after this step env.JAVA_HOME will point to the GraalVM location
    - name: Setup GraalVM environment
      uses: DeLaGuardo/setup-graalvm@master
      with:
        graalvm-version: 21.0.0.java11
    # Install extra requirements on top of ubuntu-latest
    - name: Install libraries
      run: sudo apt install libasound2-dev libavcodec-dev libavformat-dev libavutil-dev libgl-dev libgtk-3-dev libpango1.0-dev libxtst-dev

  # Build your project using Maven
      # The android profile is used, which means a native build will be created for the client target android.
      # This step also uses some env variables taken from the repo secrets. See the section 'Setup Android Keystore' below.
    - name: Gluon Build
      run: mvn -Pandroid client:build client:package
      env:
        GRAALVM_HOME: ${{ env.JAVA_HOME }}
        
    # Create staging directory in which the apk will be copied
    - name: Make staging directory
      run: mkdir staging
    # Copy the apk to the staging directory
    - name: Copy native clients to staging
      run: cp -r target/client/aarch64-android/gvm/*.apk staging
    # Upload the staging directoy as a build artifact
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: apkfile
        path: staging/MultiViewProject.apk
    # Check file exists
    - name: File Existence
      uses: andstor/file-existence-action@v1.0.1
      with:
        # Comma separated string with paths to files and directories to check for existence.
        files: staging/MultiViewProject.apk 
#   # upload apk
#     - name: Upload APK
#       uses: actions/upload-artifact@v1
#       with:
#           name: app.apk
#           path: staging/MultiViewProject.apk
